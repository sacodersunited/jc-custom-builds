---
import Layout from "../../layouts/Layout.astro"
import Header from "../../components/Header.astro"
import Slider from "../../components/SlickSlider.jsx"
// Good example of dynamic routes from Astro docs
// https://docs.astro.build/en/tutorial/5-astro-api/2/#create-pages-dynamically
export async function getStaticPaths() {
  const strapiUrl = import.meta.env.STRAPI_URL
  const response = await fetch(`${strapiUrl}/graphql`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      query: `
			query {				
        projects {
          data {
            attributes {
              Title
              subtitle
              Description
              Carousel_title
              featured_before {
                data {
                  attributes {
                    name
                    alternativeText
                    formats
                  }
                }
              }
              featured_after {
                data {
                  attributes {
                    name
                    alternativeText
                    formats
                  }
                }
              }
              all_photos {
                data {
                  attributes {
                    name
                    alternativeText
                    url
                  }
                }
              }
            }
          }
        }
		  }	
		`
    })
  })

  const slug = (str) =>
    str
      .toLowerCase()
      .replace(/[^a-z0-9]+/g, "-")
      .replace(/(^-|-$)+/g, "")

  const json = await response.json()
  const projects = json.data.projects.data

  // add slug to each project
  const allProjects = projects.map((project) => ({
    title: project.attributes.Title,
    subtitle: project.attributes.subtitle,
    carouselTitle: project.attributes.Carousel_title,
    slug: slug(project.attributes.Title),
    description: project.attributes.Description,
    featured_before: project.attributes.featured_before.data,
    featured_after: project.attributes.featured_after.data,
    all_photos: project.attributes.all_photos
  }))
  // filter out duplicate projects
  const uniqueProjects = [...new Set(allProjects.map((project) => project.slug))]

  return uniqueProjects.map((service) => {
    const filteredProject = allProjects.filter((project) => project.slug.includes(service))
    return {
      params: { service },
      props: { projects: filteredProject }
    }
  })
}

const { service } = Astro.params
const { projects } = Astro.props
---

{
  projects.map((project) => (
    <>
      <Layout title={project.title}>
        <Header title={project.title} />
        <section class="container -mt-10 mb-6">
          <a
            href="/#services"
            class="text-blue-500 hover:text-blue-700 text-base flex py-4 md:py-0"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-6 h-6"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M15.75 19.5L8.25 12l7.5-7.5"
              />
            </svg>
            Back to all services
          </a>
        </section>
        <main>
          <section class="mb-16 container">
            <h2 class="text-3xl font-serif mb-3 text-slate-900">{project.subtitle}</h2>
            <p class="md:w-3/5">{project.description}</p>
          </section>
          <section class="mb-16 container">
            <div class="md:grid md:grid-cols-2 gap-4">
              <div>
                <img
                  class="w-full h-80 rounded-md object-cover object-center"
                  src={project.featured_before.attributes.formats.small.url}
                />
                <p class="text-center text-xl py-4">Before</p>
              </div>
              <div>
                <img
                  class="w-full h-80 rounded-md object-cover object-center"
                  src={project.featured_after.attributes.formats.small.url}
                />
                <p class="text-center text-xl py-4">After</p>
              </div>
            </div>
          </section>
          <section class="bg-slate-200 py-28">
            <h2 class="text-3xl text-slate-900 font-serif mb-10 container">
              {project.carouselTitle}
            </h2>
            <Slider
              images={project.all_photos}
              client:only="react"
            />
          </section>
        </main>
      </Layout>
    </>
  ))
}
