---
import { stringifyChunk } from "astro/dist/runtime/server"

export async function getStaticPaths() {
  const strapiUrl = import.meta.env.STRAPI_URL
  const response = await fetch(`${strapiUrl}/graphql`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      query: `
			query {				
        projects {
          data {
            attributes {
              Title
              subtitle
              Description
              featured_before {
                data {
                  attributes {
                    name
                    alternativeText
                    formats
                  }
                }
              }
              featured_after {
                data {
                  attributes {
                    name
                    alternativeText
                    formats
                  }
                }
              }
              all_photos {
                data {
                  attributes {
                    name
                    alternativeText
                    url
                  }
                }
              }
            }
          }
        }
		  }	
		`
    })
  })

  const json = await response.json()
  const projects = json.data.projects.data
  return [
    { params: { service: "accent-walls" }, props: { projects: projects } },
    { params: { service: "sheds-fences-and-decks" }, props: { projects: projects } },
    { params: { service: "interior-and-cabinet-painting" }, props: { projects: projects } }
  ]
}

const { service } = Astro.params
const { projects } = Astro.props

// slugify the Title
const slug = (str) =>
  str
    .toLowerCase()
    .replace(/[^a-z0-9]+/g, "-")
    .replace(/(^-|-$)+/g, "")

const allProjects = projects.map((project) => ({
  ...project,
  slug: slug(project.attributes.Title)
}))

const filteredProject = allProjects.filter((project) => project.slug.includes(service))
const uniqueProjects = [...new Set(allProjects.map((project) => project.slug))]
---

<!-- <pre>{JSON.stringify(allProjects, null, 2)}</pre> --><!-- <pre>url is {service}</pre> --><!-- <pre>unique is {JSON.stringify(uniqueProjects, null, 2)}</pre> -->{
  filteredProject.map((project) => (
    <div>
      <pre>{JSON.stringify(project, null, 2)}</pre>
      <h1 class="text-3xl">{project.attributes.Title}</h1>
      <h2 class="text-xl">{project.attributes.subtitle}</h2>
      <p>{project.attributes.Description}</p>
    </div>
  ))
}
